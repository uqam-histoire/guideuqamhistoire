name: Build & publish undergraduate guide

on:
  push:
    branches: [ main ]
    paths:
      - "Guide_1er_cycle_2025_VF.docx"
      - "assets/**"
      - ".github/workflows/build-guide.yml"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install tools + Times New Roman for faithful PDF
      - name: Install converters & fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y libreoffice pandoc fontconfig software-properties-common
          sudo add-apt-repository multiverse -y
          sudo apt-get update
          echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | sudo debconf-set-selections
          sudo apt-get install -y ttf-mscorefonts-installer
          sudo fc-cache -f -v
          fc-list | grep -i "Times New Roman" || true

      # Copy only what we publish (CSS + images)
      - name: Prepare dist and copy assets
        run: |
          set -e
          mkdir -p dist/assets/images
          # CSS
          cp assets/*.css dist/assets/ 2>/dev/null || true
          # Images (annex-*.png under assets/images/)
          cp assets/images/* dist/assets/images/ 2>/dev/null || true
          echo "Published assets:"; ls -la dist/assets || true
          echo "Published images:"; ls -la dist/assets/images || true

      # Build date for cache-busting in the template
      - name: Set build date
        run: echo "BUILD_DATE=$(date -u +%Y-%m-%d)" >> $GITHUB_ENV

      # DOCX → PDF (desktop), embed fonts & bookmarks
      - name: Convert DOCX to PDF
        run: |
          libreoffice --headless \
            --convert-to "pdf:writer_pdf_Export:EmbedStandardFonts=true;ExportBookmarks=true;SelectPdfVersion=1" \
            "Guide_1er_cycle_2025_VF.docx" \
            --outdir dist

      # (Optional) Set PDF metadata (Title/Author/Subject)
      - name: Install exiftool
        run: sudo apt-get update && sudo apt-get install -y libimage-exiftool-perl
      - name: Set PDF metadata
        env:
          PDF_TITLE: "Guide du programme d'histoire – UQAM"
          PDF_AUTHOR: "Département d’histoire, UQAM"
          PDF_SUBJECT: "Guide du 1er cycle (B.A., majeure, mineures, certificats)"
        run: |
          exiftool -overwrite_original \
            -Title="$PDF_TITLE" \
            -Author="$PDF_AUTHOR" \
            -Subject="$PDF_SUBJECT" \
            -Keywords="UQAM, Histoire, Premier cycle, Guide" \
            dist/Guide_1er_cycle_2025_VF.pdf
          exiftool -Title -Author -Subject dist/Guide_1er_cycle_2025_VF.pdf || true

      # DOCX → HTML (mobile) using your template + Lua filter
      - name: Convert DOCX to HTML (Pandoc)
        run: |
          pandoc "Guide_1er_cycle_2025_VF.docx" \
                 -s -t html5 \
                 --section-divs \
                 --lua-filter=./assets/section-tagger.lua \
                 --template=assets/pandoc.html5 \
                 --metadata title="Guide à l’intention des étudiants et des étudiantes de premier cycle en histoire et en archivistique" \
                 --metadata lang=fr \
                 --metadata date="${BUILD_DATE}" \
                 --toc --toc-depth=3 --number-sections \
                 --css=assets/uqam-guide.css \
                 -o dist/index.html

      # Normalize Annex subsections: keep headings; replace their content with the correct image figure
      - name: Place Annex figures under their headings (and remove text mockups)
        shell: bash
        run: |
          set -euo pipefail
          html="dist/index.html"

          # 1) Modèle de page titre
          perl -0777 -i -pe 's{(<h[1-6][^>]*>\s*Mod[èe]le\s+de\s+page\s+titre.*?</h[1-6]>)(?s).*?(?=(?:<h[1-6]|</section>))}{$1\n<figure class="annex-figure"><img src="assets/images/annex-title.png" alt="Modèle de page titre (image)"><figcaption>Voir le PDF pour la version imprimable</figcaption></figure>\n}ig' "$html"

          # 2) Modèle de table des matières
          perl -0777 -i -pe 's{(<h[1-6][^>]*>\s*Mod[èe]le\s+de\s+table\s+des\s+mati[èe]res.*?</h[1-6]>)(?s).*?(?=(?:<h[1-6]|</section>))}{$1\n<figure class="annex-figure"><img src="assets/images/annex-toc.png" alt="Modèle de table des matières (image)"><figcaption>Voir le PDF pour la version imprimable</figcaption></figure>\n}ig' "$html"

          # 3) Exemple de texte avec appels de notes et citations
          perl -0777 -i -pe 's{(<h[1-6][^>]*>\s*Exemple\s+de\s+texte\s+avec\s+appels\s+de\s+notes.*?</h[1-6]>)(?s).*?(?=(?:<h[1-6]|</section>))}{$1\n<figure class="annex-figure"><img src="assets/images/annex-notes.png" alt="Exemple de texte avec appels de notes et citations (image)"><figcaption>Voir le PDF pour la version imprimable</figcaption></figure>\n}ig' "$html"

          echo "Annex images referenced (should be 3 entries below):"
          grep -n 'assets/images/annex-' "$html" || true

      # Publish to GitHub Pages (gh-pages branch)
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          publish_dir: dist
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # If you later add a custom domain, uncomment:
          # cname: guide.histoire.uqam.ca
