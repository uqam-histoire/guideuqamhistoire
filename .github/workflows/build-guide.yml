name: Build & publish undergraduate guide

on:
  push:
    branches: [ main ]
    paths:
      - "Guide_1er_cycle_2025_VF.docx"
      - "assets/**"
      - ".github/workflows/build-guide.yml"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install tools + Times New Roman for faithful PDF
      - name: Install converters & fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y libreoffice pandoc fontconfig software-properties-common
          sudo add-apt-repository multiverse -y
          sudo apt-get update
          echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | sudo debconf-set-selections
          sudo apt-get install -y ttf-mscorefonts-installer
          sudo fc-cache -f -v
          fc-list | grep -i "Times New Roman" || true

      - name: Prepare dist and copy CSS assets
        run: |
          mkdir -p dist/assets
          # copy only CSS (avoid publishing the template file itself)
          cp assets/*.css dist/assets/ || true

      # Optional: surface build date in the HTML footer
      - name: Set build date
        run: echo "BUILD_DATE=$(date -u +%Y-%m-%d)" >> $GITHUB_ENV

      # DOCX → PDF (desktop), embed fonts & bookmarks
      - name: Convert DOCX to PDF
        run: |
          libreoffice --headless \
            --convert-to "pdf:writer_pdf_Export:EmbedStandardFonts=true;ExportBookmarks=true;SelectPdfVersion=1" \
            "Guide_1er_cycle_2025_VF.docx" \
            --outdir dist
            
      - name: Install poppler-utils
        run: sudo apt-get update && sudo apt-get install -y poppler-utils

      - name: Find annex pages & render PNGs (optional)
        env:
          PDF: dist/Guide_1er_cycle_2025_VF.pdf
        run: |
          set -e
          pages=$(pdfinfo "$PDF" | awk '/Pages:/ {print $2}')
          find_page() { phrase="$1"; for i in $(seq 1 "$pages"); do
              if pdftotext -f "$i" -l "$i" "$PDF" - | grep -Eqi "$phrase"; then echo "$i"; return; fi
            done; echo ""; }
          TITLE_PAGE=$(find_page "Université du Québec à Montréal|Mod[èe]le de page titre")
          TOC_PAGE=$(find_page "^ *Table des mati[èe]res|Mod[èe]le de table des mati[èe]res")
          echo "TITLE_PAGE=$TITLE_PAGE" >> $GITHUB_ENV
          echo "TOC_PAGE=$TOC_PAGE" >> $GITHUB_ENV
          mkdir -p dist/images
          if [ -n "$TITLE_PAGE" ]; then
            pdftoppm -f "$TITLE_PAGE" -l "$TITLE_PAGE" -png -rx 220 -ry 220 "$PDF" dist/images/annex-title
            mv "dist/images/annex-title-$TITLE_PAGE.png" dist/images/annex-title.png
          fi
          if [ -n "$TOC_PAGE" ]; then
            pdftoppm -f "$TOC_PAGE" -l "$TOC_PAGE" -png -rx 220 -ry 220 "$PDF" dist/images/annex-toc
            mv "dist/images/annex-toc-$TOC_PAGE.png" dist/images/annex-toc.png
          fi
          
      # (Optional) Set PDF metadata (Title/Author/Subject)
      - name: Install exiftool
        run: sudo apt-get update && sudo apt-get install -y libimage-exiftool-perl
      - name: Set PDF metadata
        env:
          PDF_TITLE: "Guide du programme d'histoire – UQAM"
          PDF_AUTHOR: "Département d’histoire, UQAM"
          PDF_SUBJECT: "Guide du 1er cycle (B.A., majeure, mineures, certificats)"
        run: |
          exiftool -overwrite_original \
            -Title="$PDF_TITLE" \
            -Author="$PDF_AUTHOR" \
            -Subject="$PDF_SUBJECT" \
            -Keywords="UQAM, Histoire, Premier cycle, Guide" \
            dist/Guide_1er_cycle_2025_VF.pdf
          exiftool -Title -Author -Subject dist/Guide_1er_cycle_2025_VF.pdf || true

      - name: List assets and show filter
        run: |
          ls -la assets || true
          sed -n '1,60p' assets/section-tagger.lua || true

      # DOCX → HTML (mobile) with ToC, numbered sections, and committed template
      - name: Convert DOCX to HTML (Pandoc)
        run: |
          pandoc "Guide_1er_cycle_2025_VF.docx" \
                 -s -t html5 \
                 --section-divs \
                 --lua-filter=./assets/section-tagger.lua \
                 --template=assets/pandoc.html5 \
                 --metadata title="Guide à l’intention des étudiants et des étudiantes de premier cycle en histoire et en archivistique" \
                 --metadata lang=fr \
                 --metadata date="${BUILD_DATE}" \
                 --toc --toc-depth=3 --number-sections \
                 --css=assets/uqam-guide.css \
                 -o dist/index.html

      - name: Replace Annex blocks with image or PDF link
        run: |
          # Title page mock
          if [ -f dist/images/annex-title.png ]; then
            perl -0777 -i -pe 's|<div class="title-mock">.*?</div>|<figure class="annex-figure"><img src="images/annex-title.png" alt="Modèle de page titre (image)"><figcaption>Voir le PDF pour la version imprimable</figcaption></figure>|s' dist/index.html
          elif [ -n "${TITLE_PAGE}" ]; then
            perl -0777 -i -pe 's|<div class="title-mock">.*?</div>|<div class="annex-note">Modèle de page titre : voir le <a href="Guide_1er_cycle_2025_VF.pdf#page='${TITLE_PAGE}'">PDF (page '${TITLE_PAGE}')</a>.</div>|s' dist/index.html
          else
            perl -0777 -i -pe 's|<div class="title-mock">.*?</div>|<div class="annex-note">Modèle de page titre : voir le <a href="Guide_1er_cycle_2025_VF.pdf">PDF</a>.</div>|s' dist/index.html
          fi

          # ToC mock
          if [ -f dist/images/annex-toc.png ]; then
            perl -0777 -i -pe 's|<div class="toc-mock">.*?</div>|<figure class="annex-figure"><img src="images/annex-toc.png" alt="Modèle de table des matières (image)"><figcaption>Voir le PDF pour la version imprimable</figcaption></figure>|s' dist/index.html
          elif [ -n "${TOC_PAGE}" ]; then
            perl -0777 -i -pe 's|<div class="toc-mock">.*?</div>|<div class="annex-note">Modèle de table des matières : voir le <a href="Guide_1er_cycle_2025_VF.pdf#page='${TOC_PAGE}'">PDF (page '${TOC_PAGE}')</a>.</div>|s' dist/index.html
          else
            perl -0777 -i -pe 's|<div class="toc-mock">.*?</div>|<div class="annex-note">Modèle de table des matières : voir le <a href="Guide_1er_cycle_2025_VF.pdf">PDF</a>.</div>|s' dist/index.html
          fi

      - name: Debug confirm ref-entry and title-mock
        run: |
          echo '--- looking for .ref-entry ---'
          grep -n 'class="ref-entry"' dist/index.html | head -n 20 || echo 'none'
          echo '--- looking for .title-mock ---'
          grep -n 'class="title-mock"' dist/index.html | head -n 10 || echo 'none'

      # Publish to GitHub Pages (gh-pages branch)
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          publish_dir: dist
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
